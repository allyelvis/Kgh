<?php
/**
 * Auto-generate ML MCP Servers Schema for allyelvis/Kgh
 * using lightweight PHP-based NLP & file pattern analysis.
 */

require __DIR__ . '/../../vendor/autoload.php';

use Carbon\Carbon;
use Phpml\FeatureExtraction\TokenCountVectorizer;
use Phpml\Tokenization\WhitespaceTokenizer;
use Phpml\Classification\KNearestNeighbors;

$repoPath = getcwd();
$readme = file_exists("$repoPath/README.md") ? file_get_contents("$repoPath/README.md") : "";

// Step 1: Scan project files for domain context
$rii = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($repoPath));
$files = [];
foreach ($rii as $file) {
    if ($file->isDir()) continue;
    $path = $file->getPathname();
    if (strpos($path, '.git') !== false) continue;
    $files[] = $path;
}

// Step 2: Basic feature extraction keywords
$keywords = strtolower($readme . " " . implode(" ", $files));
$modules = [];

if (preg_match("/hotel|room|booking/i", $keywords)) $modules[] = "Hotel Management";
if (preg_match("/pos|restaurant|order|menu/i", $keywords)) $modules[] = "Restaurant POS";
if (preg_match("/account|invoice|transaction/i", $keywords)) $modules[] = "Accounting";
if (preg_match("/inventory|stock|supply/i", $keywords)) $modules[] = "Inventory";
if (preg_match("/crm|customer|client/i", $keywords)) $modules[] = "CRM";
if (preg_match("/media|iptv|channel/i", $keywords)) $modules[] = "Media";
if (preg_match("/payment|wallet|bank/i", $keywords)) $modules[] = "Fintech";

// Step 3: Construct base schema
$schema = [
    "version" => "1.0",
    "domain" => "kgh.allyelvis",
    "modules" => [],
    "analyzed_at" => Carbon::now('UTC')->toIso8601String(),
];

// Step 4: Populate entities for each detected module
foreach ($modules as $module) {
    $schema["modules"][$module] = [
        "entities" => [
            "AutoGeneratedEntity" => [
                "description" => "Entity automatically generated for module $module",
                "fields" => [
                    "id" => ["type" => "string", "format" => "uuid"],
                    "name" => ["type" => "string"],
                    "created_at" => ["type" => "string", "format" => "date-time"],
                ],
                "ml_relations" => [
                    "related_to" => "Insight"
                ]
            ]
        ]
    ];
}

// Step 5: Write schema to file
$outputFile = "$repoPath/ml_mcp_schema.json";
file_put_contents($outputFile, json_encode($schema, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES));

echo "âœ… Generated ML MCP Servers Schema for modules:\n";
echo implode(", ", $modules) . "\n";
echo "ðŸ“„ Output file: ml_mcp_schema.json\n";
